.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.44.1.
.TH YUBICO-PIV-TOOL "1" "November 2014" "yubico-piv-tool 0.1.1" "User Commands"
.SH NAME
yubico-piv-tool \- Yubico PIV tool
.SH SYNOPSIS
.B yubico-piv-tool
[\fIOPTIONS\fR]...
.SH DESCRIPTION
yubico\-piv\-tool 0.1.1
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help and exit
.TP
\fB\-\-full\-help\fR
Print help, including hidden options, and exit
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version and exit
.TP
\fB\-v\fR, \fB\-\-verbose\fR[=\fIINT\fR]
Print more information  (default=`0')
.TP
\fB\-r\fR, \fB\-\-reader\fR=\fISTRING\fR
Only use a matching reader  (default=`Yubikey')
.TP
\fB\-k\fR, \fB\-\-key\fR=\fISTRING\fR
Authentication key to use
(default=`010203040506070801020304050607080102030405060708')
.TP
\fB\-a\fR, \fB\-\-action\fR=\fIENUM\fR
Action to take  (possible values="version",
"generate", "set\-mgm\-key", "reset",
"pin\-retries", "import\-key",
"import\-certificate", "set\-chuid",
"request\-certificate", "verify\-pin",
"change\-pin", "change\-puk", "unblock\-pin",
"selfsign\-certificate", "delete\-certificate")
.IP
Multiple actions may be given at once and will be executed in order
for example \fB\-\-action\fR=\fIverify\-pin\fR \fB\-\-action\fR=\fIrequest\-certificate\fR
.TP
\fB\-s\fR, \fB\-\-slot\fR=\fIENUM\fR
What key slot to operate on  (possible values="9a",
"9c", "9d", "9e")
.IP
9a is for PIV Authentication
9c is for Digital Signature (PIN always checked)
9d is for Key Management
9e is for Card Authentication (PIN never checked)
.TP
\fB\-A\fR, \fB\-\-algorithm\fR=\fIENUM\fR
What algorithm to use  (possible values="RSA1024",
"RSA2048", "ECCP256" default=`RSA2048')
.TP
\fB\-H\fR, \fB\-\-hash\fR=\fIENUM\fR
Hash to use for signatures  (possible values="SHA1",
"SHA256", "SHA512" default=`SHA256')
.TP
\fB\-n\fR, \fB\-\-new\-key\fR=\fISTRING\fR
New authentication key to use
.TP
\fB\-\-pin\-retries\fR=\fIINT\fR
Number of retries before the pin code is blocked
.TP
\fB\-\-puk\-retries\fR=\fIINT\fR
Number of retries before the puk code is blocked
.TP
\fB\-i\fR, \fB\-\-input\fR=\fISTRING\fR
Filename to use as input, \- for stdin  (default=`\-')
.TP
\fB\-o\fR, \fB\-\-output\fR=\fISTRING\fR
Filename to use as output, \- for stdout  (default=`\-')
.TP
\fB\-K\fR, \fB\-\-key\-format\fR=\fIENUM\fR
Format of the key being read/written  (possible
values="PEM", "PKCS12", "GZIP" default=`PEM')
.TP
\fB\-p\fR, \fB\-\-password\fR=\fISTRING\fR
Password for decryption of private key file
.TP
\fB\-S\fR, \fB\-\-subject\fR=\fISTRING\fR
The subject to use for certificate request
.IP
The subject must be written as:
/CN=host.example.com/OU=test/O=example.com/
.TP
\fB\-P\fR, \fB\-\-pin\fR=\fISTRING\fR
Pin/puk code for verification
.TP
\fB\-N\fR, \fB\-\-new\-pin\fR=\fISTRING\fR
New pin/puk code for changing
.SH EXAMPLES

For more information about what's happening --verbose can be added
to any command. For much more information --verbose=2 may be used.

Display what version of the applet is running on the YubiKey Neo:

   yubico-piv-tool -a version

Generate a new ECC-P256 key on device in slot 9a, will print the public
key on stdout:

   yubico-piv-tool -s 9a -A ECCP256 -a generate

Generate a certificate request with public key from stdin, will print
the resulting request on stdout:

   yubico-piv-tool -s 9a -S '/CN=foo/OU=test/O=example.com/' -P 123456 \\
     -a verify -a request

Generate a self-signed certificate with public key from stdin, will print
the certificate, for later import, on stdout:

   yubico-piv-tool -s 9a -S '/CN=bar/OU=test/O=example.com/' -P 123456 \\
     -a verify -a selfsign

Import a certificate from stdin:

   yubico-piv-tool -s 9a -a import-certificate

Set a random chuid, import a key and import a certificate from a PKCS12
file with password test, into slot 9c:

   yubico-piv-tool -s 9c -i test.pfx -K PKCS12 -p test -a set-chuid \\
     -a import-key -a import-cert

Import a certificate which is larger than 2048 bytes and thus requires
compression in order to fit:

  openssl x509 -in cert.pem -outform DER | gzip -9 > der.gz
  yubico-piv-tool -s 9c -i der.gz -K GZIP -a import-cert

Change the management key used for administrative authentication:

   yubico-piv-tool -n 0807605403020108070605040302010807060504030201 \\
     -a set-mgm-key

Delete a certificate in slot 9a:

  yubico-piv-tool -a delete-certificate -s 9a
